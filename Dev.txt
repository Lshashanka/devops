import os
import snowflake.connector as sf

# Snowflake connection parameters (replace with your details)
connection = sf.connect(
    user="kasmodev",
    password="Kasmo@123",
    account="xk30645.ap-southeast-1",
    warehouse="COMPUTE_WH",
    database="INSURANCE_ANALYTICS"
)


def execute_and_save_query(query, filename):
    try:
        cursor = connection.cursor()
        cursor.execute(query)
        result = cursor.fetchone()

        with open(filename, 'w', encoding='utf-8') as file:
            if result and isinstance(result[0], str):
                file.write(result[0])

        print(f'Results saved to {filename}')
    except Exception as e:
        print(f'Error executing query: {e}')


# Create a directory to store the output files
base_directory = 'all_objects'
if not os.path.exists(base_directory):
    os.makedirs(base_directory)

# Remove all previously existing files in the local directory
for filename in os.listdir(base_directory):
    file_path = os.path.join(base_directory, filename)
    if os.path.isfile(file_path):
        os.remove(file_path)
        print(f"Deleted local file: {file_path}")

# Get the list of schemas within the Snowflake database
cursor = connection.cursor()
cursor.execute("SHOW schemas")
schemas = [schema_info[1] for schema_info in cursor.fetchall()]

# Synchronize tables from Snowflake to local directory
for schema in schemas:
    cursor.execute(f"SHOW tables IN SCHEMA {schema}")
    snowflake_tables = set([table_info[1] for table_info in cursor.fetchall()])

    for table_name in snowflake_tables:
        filename = os.path.join(base_directory, f"{table_name}.sql")
        print(f"Processing TABLE: {schema}.{table_name}")
        ddl_query = f"SELECT GET_DDL('table', '{schema}.{table_name}')"
        execute_and_save_query(ddl_query, filename)

# Close the connection
connection.close()