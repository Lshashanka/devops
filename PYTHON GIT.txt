import os
import snowflake.connector as sf

# Snowflake connection parameters (replace with your details)
connection = sf.connect(
    user="kasmodev",
    password="Kasmo@123",
    account="xk30645.ap-southeast-1",
    warehouse="COMPUTE_WH",
    database="INSURANCE_ANALYTICS"
)

def execute_and_save_query(query, filename):
    try:
        cursor = connection.cursor()
        cursor.execute(query)
        result = cursor.fetchone()

        with open(filename, 'w', encoding='utf-8') as file:
            if result and isinstance(result[0], str):
                file.write(result[0])

        print(f'Results saved to {filename}')
    except Exception as e:
        print(f'Error executing query: {e}')

# Create a directory to store the output files
schema_directory = 'table'
if not os.path.exists(schema_directory):
    os.makedirs(schema_directory)

try:
    cursor = connection.cursor()

    # Get the list of tables within the database
    cursor.execute("SHOW tables")
    tables_result = cursor.fetchall()

    # Collect the names of existing files in the local directory
    local_files = set(os.listdir(schema_directory))

    for table_info in tables_result:
        schema_name = table_info[3]  # Assuming the schema name is in the second column
        table_name = table_info[1]  # Assuming the name is in the first column
        filename = os.path.join(schema_directory, f"{table_name}.sql")

        # Check if the table exists in Snowflake
        if f"{table_name}.sql" not in local_files:
            print(f"Processing TABLE: {schema_name}.{table_name}")

            try:
                ddl_query = f"SELECT GET_DDL('table', '{schema_name}.{table_name}')"
                execute_and_save_query(ddl_query, filename)

            except sf.errors.ProgrammingError as e:
                print(f'Error processing TABLE: {table_name}: {e}')
            except Exception as e:
                print(f'Unexpected error processing TABLE: {table_name}: {e}')

    # Remove local files corresponding to deleted tables in Snowflake
    for deleted_file in local_files:
        if deleted_file.endswith(".sql"):
            table_name = deleted_file[:-4]  # Remove the ".sql" extension
            if table_name not in [table_info[1] for table_info in tables_result]:
                deleted_filename = os.path.join(schema_directory, deleted_file)
                os.remove(deleted_filename)
                print(f"Deleted local file: {deleted_filename}")

except Exception as e:
    print(f'Error executing query: {e}')

# Close the connection
connection.close()
